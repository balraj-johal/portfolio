@use "../theme/breakpoints" as breakpoints;
@use "../theme/layout" as layout;

.Homepage {
  @include layout.page-container();

  font-family: var(--font-proto-mono);
  letter-spacing: var(--proto-mono-letter-spacing);
  text-transform: uppercase;

  --bp-xl-top-margin: calc(var(--container-padding) + 4px);

  .Header {
    grid-column: 1 / -1;

    margin-block: 2rem;

    h1 {
      display: flex;
      gap: 0.35em;

      .AnimateWidth {
        display: none;
      }
    }

    @media (min-width: 768px) {
      margin-top: 4rem;
      margin-bottom: 2rem;

      h1 {
        width: fit-content;
        gap: 0;

        .AnimateWidth {
          display: inline-block;
          margin-inline: 0.24em 0.16em;

          > span {
            display: grid;
            grid-template-columns: 0fr;
            grid-template-rows: 1lh;

            transition: grid-template-columns 150ms
              cubic-bezier(0.19, 1, 0.22, 1);

            > span {
              overflow: hidden;
              border-radius: 2px;

              img {
                height: 1lh;
                width: 0.8lh;
                user-select: none;
              }
            }
          }
        }

        &:hover {
          .AnimateWidth > span {
            grid-template-columns: 1fr;
          }
        }
      }
    }

    @media (min-width: breakpoints.$xl) {
      margin-block: var(--bp-xl-top-margin);
    }

    .Subheading {
      text-align: right;
      margin-top: 1rem;
    }
  }

  .ContactMe {
    display: flex;
    justify-content: right;
    gap: 1rem;
    margin-block: 0 1rem;
  }

  .AboutMe,
  .AccoladesSection,
  .BlogLinksSection {
    grid-column: 1 / -1;
  }

  .DesktopSticky {
    display: contents;
  }

  @media (min-width: breakpoints.$xl) {
    .DesktopSticky {
      height: clamp(500px, 70vh, 650px);

      position: sticky;
      top: 0;

      display: grid;
      grid-column: 1 / 7;
      grid-template-rows: 1fr auto;
      grid-template-columns: subgrid;

      .AboutMe,
      .AccoladesSection {
        grid-row: 2;
      }

      .AboutMe {
        grid-column: span 2;
        margin-block-end: 1.5rem;
      }

      .AccoladesSection {
        grid-column: 3 / span 4;
      }
    }
  }

  a {
    text-decoration: none;

    outline: 2px solid transparent;
    outline-offset: 4px;
    border-radius: 2px;

    transition: outline-color 200ms ease-in-out;
    padding-inline-start: 1px;

    h3 {
      position: relative;

      width: fit-content;
      padding-inline: 1px 4px;

      @media (min-width: breakpoints.$xl) {
        font-size: 1rem;
      }

      &::after {
        content: ">";
        margin-left: 4px;
        margin-top: 1px;

        display: inline-block;

        transform-origin: left center;
        transform: translateX(0px);

        @media (pointer: fine) {
          opacity: 0;
        }
      }
    }

    &:hover,
    &:focus-visible {
      h3::after {
        transform: translateX(2px);
        opacity: 1;
        transition:
          transform 50ms ease-in-out,
          opacity 40ms ease-out;
      }

      h3 {
        color: var(--color-white);
        background-color: var(--color-black);
      }
    }
  }

  p,
  h2,
  h3,
  a {
    font-weight: 400;
    margin: 0;
    color: var(--color-black);
  }

  p {
    font-size: 16px;
  }

  h2 {
    font-size: 20px;
  }

  ul {
    list-style: none;
    min-height: 0;

    padding: 0;
  }

  section {
    display: flex;
    flex-direction: column;

    &.AccoladesSection,
    &.BlogLinksSection {
      align-items: flex-end;

      margin-block: 1rem 1.5rem;

      @media (min-width: 768px) {
        margin-top: 0;
      }
    }

    p {
      margin-block: 0;
    }
  }

  .SelectedWork {
    grid-column: 1 / -1;

    .WorkList {
      margin-top: 0;

      @media (min-width: 1024px) {
        margin-top: 2rem;
      }

      > li {
        padding-block: 1.5rem;

        @media (min-width: 1024px) {
          padding-block: 2.5rem;
        }

        a {
          display: grid;
          grid-template-columns: 1fr auto;

          .MediaContainer {
            grid-column: 1 / -1;
          }

          &:hover,
          &:focus-visible {
            .Oneliner {
              opacity: 1;
            }
          }

          .Oneliner {
            grid-column: span 2;
            opacity: 0;
          }

          h3 {
            margin-top: -1px;
            margin-bottom: 0.25rem;
          }

          .MediaContainer {
            position: relative;

            width: 100%;
            height: fit-content;

            margin-bottom: 1rem;

            border-radius: var(--border-radius);
            overflow: clip;

            img,
            video {
              display: block;

              animation-name: parallax;
              animation-timing-function: linear;
              animation-timeline: view();

              transform-origin: center;
            }

            img {
              width: 100%;
              height: 100%;

              object-fit: cover;
            }

            video {
              width: 100%;
            }
          }
        }
      }
    }

    @media (min-width: 768px) {
      grid-column: 2 / 10;

      margin-top: 3rem;
    }

    @media (min-width: breakpoints.$xl) {
      grid-column: 7 / end;
      grid-row-start: 1;

      margin-top: var(--bp-xl-top-margin);

      .WorkList,
      .WorkList > li:first-of-type {
        margin-top: 0;
        padding-top: 0;
      }
    }
  }
}

@keyframes parallax {
  from {
    transform: scale(1.1);
  }
  to {
    transform: scale(1);
  }
}

.Column,
.Column_RightAligned {
  display: flex;
  flex-direction: column;
}

.Column_RightAligned {
  align-items: flex-end;
}

.PhantomLink {
  position: relative;

  &::after {
    content: "";
    width: 18px;
    height: 32px;

    position: absolute;
    right: -12px;
    top: -35%;
    transform: translate(90%, 0%);

    pointer-events: none;

    display: block;
    opacity: 0;

    transition:
      opacity 50ms ease-out,
      transform 50ms ease-out;

    background-image: url("../../public/assets/images/phntm-logo.svg");
    background-size: contain;
    background-repeat: no-repeat;
  }

  &:hover,
  &:focus-visible {
    &::after {
      opacity: 1;
      transform: translate(100%, 0%);
    }
  }
}

a.InvertOnHover,
button.InvertOnHover {
  border: 0;
  background-color: transparent;
  position: relative;
  font-family: var(--font-proto-mono);
  letter-spacing: var(--proto-mono-letter-spacing);
  text-transform: uppercase;
  font-size: 1rem;
  padding: 0 1px;

  &:hover,
  &:focus-visible {
    color: var(--color-white);

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      z-index: -1;
      background-color: var(--color-black);
      width: calc(100% + 2px);
    }
  }
}
