@use "../theme/grid.scss" as grid;

.PageContainer {
  @include grid.inherit-columns();

  @media (min-width: 768px) {
    grid-column: 2 / 12;
    padding-bottom: 8rem;
  }

  font-family: var(--font-proto-mono);
  letter-spacing: -0.075em;
  text-transform: uppercase;

  .Header {
    grid-column: 1 / -1;

    margin-block: 2rem;

    @media (min-width: 768px) {
      margin-top: 4rem;
      margin-bottom: 2rem;
    }

    .HeadingMain {
      font-size: clamp(44px, 14vw, 64px);
      margin-block: 0;

      @media (min-width: 768px) {
        font-size: clamp(64px, 4vw, 96px);
      }
    }

    .Subheading {
      text-align: right;
      margin-top: 1rem;
    }
  }

  .ContactMe {
    display: flex;
    justify-content: right;
    gap: 1rem;
    margin-block: 0 1rem;
  }

  .AboutMe,
  .AccoladesSection {
    grid-column: 1 / -1;
  }

  a {
    text-decoration: none;

    outline: 2px solid transparent;
    outline-offset: 4px;
    border-radius: 2px;

    transition: outline-color 200ms ease-in-out;

    h3 {
      position: relative;

      width: fit-content;

      &::after {
        content: ">";
        margin-left: 4px;
        margin-top: 1px;

        display: inline-block;

        transform-origin: left center;
        transform: translateX(0px);
        transition:
          transform 150ms ease-in-out,
          opacity 100ms ease-in-out;

        @media (pointer: fine) {
          opacity: 0;
        }
      }
    }

    &:hover,
    &:focus-visible {
      h3::after {
        transform: translateX(2px);
        opacity: 1;
      }
    }
  }

  p,
  h2,
  h3,
  a {
    font-weight: 400;
    margin: 0;
    color: var(--color-black);
  }

  p {
    font-size: 16px;
  }

  h2 {
    font-size: 20px;
  }

  ul {
    list-style: none;
    min-height: 0;

    padding: 0;
  }

  section {
    display: flex;
    flex-direction: column;

    &.AccoladesSection {
      align-items: flex-end;

      margin-block: 1rem 1.5rem;

      @media (min-width: 768px) {
        margin-top: 0;
      }
    }

    p {
      margin-block: 0;
    }
  }

  .SelectedWork {
    grid-column: 1 / -1;

    @media (min-width: 768px) {
      grid-column: 2 / 10;

      margin-top: 3rem;
    }

    .WorkList {
      margin-top: 0;

      @media (min-width: 1024px) {
        margin-top: 2rem;
      }

      > li {
        padding-block: 1.5rem;

        @media (min-width: 1024px) {
          padding-block: 2.5rem;
        }

        .RolesPanel {
          display: grid;
          grid-template-rows: 0fr;

          @media (min-width: 768px) {
            transition: grid-template-rows 400ms
              cubic-bezier(0.165, 0.84, 0.44, 1);
          }

          overflow: clip;

          ul li:last-of-type {
            padding-bottom: 1rem;
          }
        }

        @media (min-width: 768px) {
          &:hover,
          a:focus-visible {
            .RolesPanel {
              grid-template-rows: 1fr;
            }
          }
        }

        h3 {
          margin-bottom: 0.25rem;
        }

        .MediaContainer {
          position: relative;

          width: 100%;
          height: fit-content;

          margin-bottom: 1rem;

          border-radius: 8px;
          overflow: clip;

          img,
          video {
            display: block;

            animation-name: parallax;
            animation-timing-function: linear;
            animation-timeline: view();
          }

          img {
            width: 100%;
            height: 100%;

            object-fit: cover;
          }

          video {
            width: 100%;
          }
        }
      }
    }
  }
}

@keyframes parallax {
  from {
    transform: scale(1.15);
  }
  to {
    transform: scale(1);
  }
}

.Column,
.Column_RightAligned {
  display: flex;
  flex-direction: column;
}

.Column_RightAligned {
  align-items: flex-end;
}

.PhantomLink {
  position: relative;

  &::after {
    content: "";
    width: 18px;
    height: 32px;

    position: absolute;
    right: -12px;
    top: -35%;
    transform: translate(90%, 0%);

    pointer-events: none;

    display: block;
    opacity: 0;

    transition: 50ms ease-out;
    transition-property: opacity transform;

    background-image: url("../../public/assets/images/phntm-logo.svg");
    background-size: contain;
    background-repeat: no-repeat;
  }

  &:hover,
  &:focus-visible {
    &::after {
      opacity: 1;
      transform: translate(100%, 0%);
    }
  }
}

a.InvertOnHover {
  position: relative;

  &:hover,
  &:focus-visible {
    color: var(--color-white);

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      z-index: -1;
      background-color: var(--color-black);
      width: calc(100% + 2px);
    }
  }
}
