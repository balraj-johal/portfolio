section.HeroWrapper {
  height: 100vh;
  height: 100dvh;
  display: flex;
  flex-direction: column;

  /* Not sure why 14's needed as col end here :/ */
  grid-column: 1 / 14;
}


@media (min-width: 768px) {
  section.HeroWrapper {
    --hero-top-offset: 8vh;
    --hero-media-height: 40vh;
    padding-top: var(--hero-top-offset);

    grid-column: 1 / 13;
  }
}

.HeroSubContent {
  position: absolute;
  width: 100%;
  height: 50%;
  bottom: 0;

  display: flex;
  flex-direction: column;

  font-size: 18px;
}

.HeroContentLeft {
  width: 100%;
  padding-inline: 8vw;
}

@media (min-width: 768px) {
  .HeroSubContent {
    position: absolute;
    width: 100%;
    height: 33%;
    bottom: 0;

    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: var(--grid-gap);
    gap: var(--grid-gap);

    font-size: 22px;
  }
  
  .HeroContentLeft {
    height: 100%;
    padding: 0;
  }
}


@media (min-width: 768px) and (max-width: 1200px) {
  .HeroContentLeft {
    grid-column: 2 / 5;
  }
}

@media (min-width: 1200px) {
  .HeroContentLeft {
    grid-column: 2 / 5;
  }
}

@keyframes float {
  from {
    transform: translateY(10%);
  }
  to {
    transform: translateY(-10%);
  }
}

.PhantomLink {
  position: relative;
}

.PhantomLink::after {
  content: "";
  position: absolute;
  /* gap + psuedo elem width */
  right: -36px;
  
  width: 28px;
  height: 60px;
  background-repeat: no-repeat;
  background-size: 28px 60px;

  transform-origin: center;

  pointer-events: none;

  background-image: url("/assets/images/phantom-logo.svg");

  animation: float 1.5s forwards infinite alternate ease-in-out;

  opacity: 0;
  filter: blur(4px);
  transition: opacity 300ms cubic-bezier(0.215, 0.610, 0.355, 1), filter 450ms cubic-bezier(0.215, 0.610, 0.355, 1);
}

.PhantomLink:hover::after {
  opacity: 1;
  filter: blur(0px);
}